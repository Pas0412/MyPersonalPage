{"version":3,"file":"js/586.fbc3ecb2.js","mappings":"mQAWA,MAAMA,GAAeC,EAAAA,EAAAA,IAAI,MAUnBC,GAAeC,EAAAA,EAAAA,KAEfC,GAAoBH,EAAAA,EAAAA,IAAI,IAExBI,EAAY,KAChB,MAAMC,EAAQC,EAAAA,GAAaP,EAAaQ,OAClCC,EAAS,CACbC,gBAAiB,UACjBC,QAAS,CACPC,QAAS,OACTC,UAAW,SAAUC,GACnB,OAAOA,EAAOC,OAGlBC,OAAQ,CACN,CACEC,KAAM,MACNC,IAAK,QACLC,MAAM,EACNC,MAAO,CACLC,MAAM,EACNC,MAAO,QACPC,SAAU,OAEZC,UAAW,CACTC,UAAW,UACXC,YAAa,OACbC,YAAa,GAEfC,SAAU,CACRR,MAAO,CACLC,MAAM,GAERG,UAAW,CACTC,UAAW,aAIjB,CACER,KAAM,gBACNY,iBAAkB,MAClBC,KAAM5B,EACN6B,aAAc,SACdC,aAAc,CAEZC,UAAW,QAEbC,gBAAgB,EAChBd,MAAO,CAELe,OAAQ,CACNtB,UAAW,MACXuB,SAAU,QACVf,MAAM,IAGVG,UAAW,CAETW,OAAQ,CACNb,MAAO,UACPe,WAAY,GACZC,YAAa,GACbf,SAAU,QAGdgB,OAAQ,EACRC,OAAQ,SACRC,WAAY,IAGhBC,IAAK,CACHxB,IAAK,QACLC,MAAM,EACNK,UAAW,CACTC,UAAW,UACXC,YAAa,OACbC,YAAa,EAEbW,YAAa,qBACbD,WAAY,GACZM,cAAe,EACfC,cAAe,GAEjBxB,MAAO,CACLC,MAAM,EACNC,MAAO,QACPC,SAAU,SAKhBjB,EAAMuC,UAAUpC,GAGhBH,EAAMwC,GAAG,SAAS,SAAUhC,GAC1B,GAA6B,WAAzBA,EAAOiC,eAAoD,QAAtBjC,EAAOkC,WAAsB,CACpE,MAAMC,EAAkBnC,EAAOC,KAC/B,GAAIX,EAAkBI,MAAM0C,SAASD,GAAkB,CACrD,MAAME,EAAQ/C,EAAkBI,MAAM4C,QAAQH,GAC9C7C,EAAkBI,MAAM6C,OAAOF,EAAO,QAEtC/C,EAAkBI,MAAM8C,KAAKL,GAE/B3C,EAAMuC,UAAU,CACd7B,OAAQ,CACN,CACEc,KAAMyB,aAQZA,EAAyB,IAEtB,CAACrD,G,OAGVsD,EAAAA,EAAAA,KAAU,KACRnD,O,4HCvIF,MAAMoD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE","sources":["webpack://mypersonalpage/./src/views/ChinaMap.vue","webpack://mypersonalpage/./src/views/ChinaMap.vue?2bd0"],"sourcesContent":["<template>\r\n  <div ref=\"mapContainer\" style=\"width: 1300px; height: 900px\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport \"@/assets/china.js\"; // Import the China map data\r\nimport { onMounted, ref } from \"vue\";\r\nimport { getCityPosition } from \"@/assets/cityPosition\";\r\n\r\n\r\nconst mapContainer = ref(null);\r\n\r\n// const provinceData = mapdata.features.map((feature) => {\r\n//   const { name, center } = feature.properties;\r\n//   return {\r\n//     name,\r\n//     value: center,\r\n//   };\r\n// });\r\n\r\nconst provinceData = getCityPosition();\r\n\r\nconst selectedProvinces = ref([]);\r\n\r\nconst initChart = () => {\r\n  const chart = echarts.init(mapContainer.value);\r\n  const option = {\r\n    backgroundColor: \"#f5f5f5\",\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      formatter: function (params) {\r\n        return params.name;\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        type: \"map\",\r\n        map: \"china\",\r\n        roam: false,\r\n        label: {\r\n          show: false,\r\n          color: \"black\",\r\n          fontSize: \"8px\",\r\n        },\r\n        itemStyle: {\r\n          areaColor: \"#F0F8FF\", // 主色设置为浅蓝色\r\n          borderColor: \"#ccc\",\r\n          borderWidth: 1,\r\n        },\r\n        emphasis: {\r\n          label: {\r\n            show: false,\r\n          },\r\n          itemStyle: {\r\n            areaColor: \"#87CEFA\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        type: \"effectScatter\",\r\n        coordinateSystem: \"geo\",\r\n        data: provinceData,\r\n        showEffectOn: \"render\",\r\n        rippleEffect: {\r\n          //涟漪特效相关配置\r\n          brushType: \"fill\", //波纹的绘制方式，可选 'stroke' 和 'fill'\r\n        },\r\n        hoverAnimation: true, //是否开启鼠标 hover 的提示动画效果\r\n        label: {\r\n          //图形上的文本标签，可用于说明图形的一些数据信息，比如值，名称等，\r\n          normal: {\r\n            formatter: \"{b}\",\r\n            position: \"right\",\r\n            show: true,\r\n          },\r\n        },\r\n        itemStyle: {\r\n          //图形样式，normal 是图形在默认状态下的样式；emphasis 是图形在高亮状态下的样式，比如在鼠标悬浮或者图例联动高亮时\r\n          normal: {\r\n            color: \"#ADD8E6\", //散点的颜色\r\n            shadowBlur: 10,\r\n            shadowColor: 20,\r\n            fontSize: \"8px\",\r\n          },\r\n        },\r\n        zlevel: 1,\r\n        symbol: \"circle\", // 设置标点符号为圆形，还可以是'rect'（矩形）等其他类型，按需选择\r\n        symbolSize: 5,\r\n      },\r\n    ],\r\n    geo: {\r\n      map: \"china\",\r\n      roam: false,\r\n      itemStyle: {\r\n        areaColor: \"#F0F8FF\", // 主色设置为浅蓝色\r\n        borderColor: \"#ccc\",\r\n        borderWidth: 1,\r\n        // 重点：设置整个地图最外圈轮廓的阴影样式，只在下方显示阴影\r\n        shadowColor: \"rgba(0, 0, 0, 0.3)\",\r\n        shadowBlur: 10,\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 5,\r\n      },\r\n      label: {\r\n        show: false,\r\n        color: \"black\",\r\n        fontSize: \"8px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  chart.setOption(option);\r\n\r\n  // 点击省会等区域的事件处理\r\n  chart.on(\"click\", function (params) {\r\n    if (params.componentType === \"series\" && params.seriesType === \"map\") {\r\n      const clickedProvince = params.name;\r\n      if (selectedProvinces.value.includes(clickedProvince)) {\r\n        const index = selectedProvinces.value.indexOf(clickedProvince);\r\n        selectedProvinces.value.splice(index, 1);\r\n      } else {\r\n        selectedProvinces.value.push(clickedProvince);\r\n      }\r\n      chart.setOption({\r\n        series: [\r\n          {\r\n            data: getUpdatedProvinceData(),\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nconst getUpdatedProvinceData = () => {\r\n  // 这里可以根据selectedProvinces重新整理数据，比如设置不同样式等\r\n  return [provinceData];\r\n};\r\n\r\nonMounted(() => {\r\n  initChart();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  background-color: lightblue;\r\n}\r\n</style>\r\n","import script from \"./ChinaMap.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChinaMap.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChinaMap.vue?vue&type=style&index=0&id=bd114318&scoped=true&lang=css\"\n\nimport exportComponent from \"F:\\\\personal\\\\MyPersonalPage\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bd114318\"]])\n\nexport default __exports__"],"names":["mapContainer","ref","provinceData","getCityPosition","selectedProvinces","initChart","chart","echarts","value","option","backgroundColor","tooltip","trigger","formatter","params","name","series","type","map","roam","label","show","color","fontSize","itemStyle","areaColor","borderColor","borderWidth","emphasis","coordinateSystem","data","showEffectOn","rippleEffect","brushType","hoverAnimation","normal","position","shadowBlur","shadowColor","zlevel","symbol","symbolSize","geo","shadowOffsetX","shadowOffsetY","setOption","on","componentType","seriesType","clickedProvince","includes","index","indexOf","splice","push","getUpdatedProvinceData","onMounted","__exports__"],"sourceRoot":""}